<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   default-autowire="byName" default-lazy-init="false"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<bean  id="settings" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="localOverride" value="true"/>
		<property name="ignoreResourceNotFound" value="true"/>
		<property name="fileEncoding" value="UTF-8"/>
		<property name="locations" ref="propertyResources"/>
	</bean>
	<!-- 开发环境 -->
	<beans profile="development">
		<!--加载配置信息-->
		<context:property-placeholder ignore-resource-not-found="true" ignore-unresolvable="true" order="0" properties-ref="settings"/>
		<bean id="propertyResources" class="java.util.ArrayList">
			<constructor-arg>
				<list>
					<!-- 这里支持多种寻址方式：classpath和file -->
					<value>classpath*:properties/development/database.properties</value>
					<value>classpath*:properties/odp.properties</value>
					<value>classpath*:properties/baidu.properties</value>
					<value>classpath*:properties/hibernate.properties</value>
					<!--全局配置-->
					<value>classpath*:app.properties</value>
					<!--邮件配置信息-->
					<value>classpath*:properties/development/mail.properties</value>
					<value>classpath*:properties/development/third-conf.properties</value>

				</list>
			</constructor-arg>
		</bean>
		<!--如果项目里面有需要加载资源文件的地方，必须配置order属性，且值为0，否则会导致资源文件未被加载。-->

		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			<!-- <property name="dbType" value="#{applicationPropertiesConfig['database.driverClassName']}" /> -->
			<!-- 基本属性 url、user、password -->
			<property name="url" value="${database.jdbcurl}" />
			<!-- 用户名 -->
			<property name="username" value="${database.user}"/>
			<!-- 密码 -->
			<property name="password" value="${database.password}" />

			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="${database.initialSize}" />
			<property name="minIdle" value="${database.minIdle}" />
			<property name="maxActive" value="${database.maxActive}"/>

			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="6000" />
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />
			<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
			<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
			<property name="poolPreparedStatements" value="true" />
			<!-- -如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 -->
			<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
			<!-- 配置监控统计拦截的filters -->
			<property name="filters" value="stat" />
		</bean>
	</beans>

	<!-- 开发环境 -->
	<beans profile="uat">
		<!--加载配置信息-->
		<context:property-placeholder ignore-resource-not-found="true" ignore-unresolvable="true" order="0" properties-ref="settings"/>
		<bean id="propertyResources" class="java.util.ArrayList">
			<constructor-arg>
				<list>
					<!-- 这里支持多种寻址方式：classpath和file -->
					<value>classpath*:properties/uat/database.properties</value>
					<value>classpath*:properties/odp.properties</value>
					<value>classpath*:properties/baidu.properties</value>
					<value>classpath*:properties/hibernate.properties</value>
					<!--全局配置-->
					<value>classpath*:app.properties</value>
					<!--邮件配置信息-->
					<value>classpath*:properties/uat/mail.properties</value>
					<value>classpath*:properties/uat/third-conf.properties</value>

				</list>
			</constructor-arg>
		</bean>
		<!--如果项目里面有需要加载资源文件的地方，必须配置order属性，且值为0，否则会导致资源文件未被加载。-->

		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			<!-- <property name="dbType" value="#{applicationPropertiesConfig['database.driverClassName']}" /> -->
			<!-- 基本属性 url、user、password -->
			<property name="url" value="${database.jdbcurl}" />
			<!-- 用户名 -->
			<property name="username" value="${database.user}"/>
			<!-- 密码 -->
			<property name="password" value="${database.password}" />

			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="${database.initialSize}" />
			<property name="minIdle" value="${database.minIdle}" />
			<property name="maxActive" value="${database.maxActive}"/>

			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="6000" />
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />
			<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
			<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
			<property name="poolPreparedStatements" value="true" />
			<!-- -如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 -->
			<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
			<!-- 配置监控统计拦截的filters -->
			<property name="filters" value="stat" />
		</bean>
	</beans>


	<!-- 生产环境 -->
	<beans profile="production">

		<!--加载配置信息-->
		<context:property-placeholder ignore-resource-not-found="true" ignore-unresolvable="true" order="0" properties-ref="settings"/>
		<bean id="propertyResources" class="java.util.ArrayList">
			<constructor-arg>
				<list>
					<!-- 这里支持多种寻址方式：classpath和file -->
					<value>classpath*:properties/production/database.properties</value>
					<value>classpath*:properties/odp.properties</value>
					<value>classpath*:properties/baidu.properties</value>
					<value>classpath*:properties/hibernate.properties</value>
					<!--全局配置-->
					<value>classpath*:app.properties</value>
					<!--邮件配置信息-->
					<value>classpath*:properties/production/mail.properties</value>
					<value>classpath*:properties/production/third-conf.properties</value>

				</list>
			</constructor-arg>
		</bean>


		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			<!-- <property name="dbType" value="#{applicationPropertiesConfig['database.driverClassName']}" /> -->
			<!-- 基本属性 url、user、password -->
			<property name="url" value="${database.jdbcurl}" />
			<!-- 用户名 -->
			<property name="username" value="${database.user}"/>
			<!-- 密码 -->
			<property name="password" value="${database.password}" />

			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="${database.initialSize}" />
			<property name="minIdle" value="${database.minIdle}" />
			<property name="maxActive" value="${database.maxActive}"/>

			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="6000" />
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />
			<property name="validationQuery" value="SELECT 'x' FROM DUAL" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
			<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
			<property name="poolPreparedStatements" value="true" />
			<!-- -如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 -->
			<property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
			<!-- 配置监控统计拦截的filters -->
			<property name="filters" value="stat" />
		</bean>
	</beans>
</beans>